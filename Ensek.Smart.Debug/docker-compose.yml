services:
  ensek.smart.database:
    build:
      context: /Database
      dockerfile: Dockerfile
    environment:
      - SA_PASSWORD=${MSSQL_SA_PASSWORD}
    ports:
      - 1433:1433
    healthcheck:
      test: ["CMD", "bash", "./healthcheck.sh"]
      interval: 1s
      retries: 60

  ensek.smart.databaseinit:
    depends_on:
      ensek.smart.database:
        condition: service_healthy
    build:
      context: /DatabaseInit
      dockerfile: Dockerfile
    environment:
      - SA_PASSWORD=${MSSQL_SA_PASSWORD}
    healthcheck:
      test: ["CMD", "bash", "./healthcheck.sh"]
      interval: 1s
      retries: 60 

  ensek.smart.databasemigration:
    depends_on:
      ensek.smart.database:
        condition: service_healthy
      ensek.smart.databaseinit:
        condition: service_healthy
    image: ${DOCKER_REGISTRY-}enseksmartdata
    build:
      context: ../.
      dockerfile: Ensek.Smart.Debug/DatabaseMigration/Dockerfile
    environment:
      - SA_PASSWORD=${MSSQL_SA_PASSWORD}

  ensek.smart.api:
    depends_on:
      ensek.smart.database:
        condition: service_healthy
    build:
      context: ../.
      dockerfile: Ensek.Smart.Api/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_HTTP_PORTS=8080
      - ASPNETCORE_HTTPS_PORTS=8081
      - ConnectionStrings__SmartDatabase=Data Source=host.docker.internal;Initial Catalog=Smart;User Id=sa;Password=${MSSQL_SA_PASSWORD};TrustServerCertificate=true
    ports:
      - "8080"
      - "8081"
    volumes:
      - ${APPDATA}/Microsoft/UserSecrets:/home/app/.microsoft/usersecrets:ro
      - ${APPDATA}/ASP.NET/Https:/home/app/.aspnet/https:ro